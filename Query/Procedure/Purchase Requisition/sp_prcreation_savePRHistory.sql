-- =============================================
-- Author:		FID)Intan Puspitasari
-- Create date: 20/04/2016
-- Description:	Save History PR
-- =============================================
ALTER PROCEDURE [dbo].[sp_prcreation_savePRHistory]
		@PR_NO VARCHAR(15),
		@PROCESS_ID BIGINT,
		@USER_ID VARCHAR(20),
		@PRH_DATA PR_H_TEMP READONLY,
		@STATUS VARCHAR(20) OUTPUT
AS
BEGIN
DECLARE @SEQ_NO INT,
		@ACTION CHAR(1),
		@MESSAGE VARCHAR(MAX),
		@TEMP_LOG LOG_TEMP,
		@MSG_ID VARCHAR(12),
		@MODULE VARCHAR(3) = '2',
		@FUNCTION VARCHAR(5) = '201002',
		@LOCATION VARCHAR(50) = 'Saving PR History' 
		
	SET NOCOUNT ON;

SET @MESSAGE = 'Save History for PR No ' + @PR_NO + ' Started'
SET @MSG_ID = 'MSG0000087'
INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'INF', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 1, @USER_ID
EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

BEGIN TRY
	SET @MESSAGE = 'Insert into TB_H_PR_H Started'
	SET @MSG_ID = 'MSG0000088'
	INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'INF', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 1, @USER_ID
	EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

	SELECT @ACTION = CASE WHEN (COUNT(1) > 0) THEN 'U' ELSE 'I' END FROM TB_R_PR_H WHERE PR_NO = @PR_NO

	DECLARE @PROC_MONTH VARCHAR(6), @LOCAL_CURR_CD VARCHAR(6)
	SELECT @PROC_MONTH = SYSTEM_VALUE FROM TB_M_SYSTEM WHERE SYSTEM_CD = 'PROC_MONTH' 
	SELECT @LOCAL_CURR_CD = SYSTEM_VALUE FROM TB_M_SYSTEM WHERE SYSTEM_CD = 'LOCAL_CURR_CD'

	INSERT INTO [dbo].[TB_H_PR_H]
			([PROCESS_ID]
			,[PR_NO]
			,[DOC_DT]
			,[PR_DESC]
			,[PR_TYPE]
			,[PROC_MONTH]
			,[PR_STATUS]
			,[PLANT_CD]
			,[SLOC_CD]
			,[PR_COORDINATOR]
			,[DIVISION_ID]
			,[DIVISION_NAME]
			,[PROJECT_NO]
			,[LOCAL_CURR_CD]
			,[LOCAL_AMOUNT]
			,[RELEASED_FLAG]
			,[SAP_DOC_NO]
			,[URGENT_DOC]
			,[MAIN_ASSET]
			,[PR_NOTES]
			,[DELIVERY_PLAN_DT]
			,[CANCEL_FLAG]
			,[LAST_ACTION]
			,[CREATED_BY]
			,[CREATED_DT]
			,[CHANGED_BY]
			,[CHANGED_DT])
		SELECT @PROCESS_ID
			,@PR_NO
			,DOC_DT
			,PR_DESC
			,PR_TYPE
			,@PROC_MONTH
			,'90'
			,PLANT_CD
			,SLOC_CD
			,PR_COORDINATOR
			,DIVISION_ID
			,DIVISION_NAME
			,PROJECT_NO
			,@LOCAL_CURR_CD
			,0
			,'N'
			,NULL
			,URGENT_DOC
			,MAIN_ASSET
			,PR_NOTES
			,DELIVERY_PLAN_DT
			,'N'
			,@ACTION
			,@USER_ID
			,GETDATE()
			,NULL
			,NULL
		FROM @PRH_DATA WHERE PROCESS_ID = @PROCESS_ID

	SET @MESSAGE = 'Insert into TB_H_PR_H Success'
	SET @MSG_ID = 'MSG0000089'
	INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'SUC', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 2, @USER_ID
	EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'SUC', @MODULE, @FUNCTION, 2;
END TRY
BEGIN CATCH
	SET @MESSAGE = 'Insert into TB_H_PR_H Failed'
	SET @MSG_ID = 'MSG0000090'
	INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID
	EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;

	SELECT @MESSAGE = ERROR_MESSAGE()
	SET @MSG_ID = 'EXCEPTION'
	INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID
	EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;

	SET @STATUS = 'FAILED'
END CATCH

IF(@STATUS = 'SUCCESS')
BEGIN
	BEGIN TRY
		SET @MESSAGE = 'Insert into TB_H_PR_ITEM Started'
		SET @MSG_ID = 'MSG0000091'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'INF', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 1, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

		INSERT INTO [dbo].[TB_H_PR_ITEM]
			   ([PROCESS_ID]
			   ,[PR_NO]
			   ,[PR_ITEM_NO]
			   ,[ITEM_TYPE]
			   ,[IS_PARENT]
			   ,[PROCUREMENT_PURPOSE]
			   ,[MAT_NO]
			   ,[MAT_DESC]
			   ,[COST_CENTER_CD]
			   ,[WBS_NO]
			   ,[WBS_NAME]
			   ,[ITEM_CLASS]
			   ,[ITEM_CLASS_DESC]
			   ,[VALUATION_CLASS]
			   ,[VALUATION_CLASS_DESC]
			   ,[SOURCE_TYPE]
			   ,[BUYER_CD]
			   ,[DOC_TYPE]
			   ,[PACKING_TYPE]
			   ,[PART_COLOR_SFX]
			   ,[SPECIAL_PROC_TYPE]
			   ,[PR_QTY]
			   ,[PO_NO]
			   ,[UNIT_OF_MEASURE_CD]
			   ,[ORI_CURR_CD]
			   ,[PRICE_PER_UOM]
			   ,[ORI_AMOUNT]
			   ,[LOCAL_CURR_CD]
			   ,[EXCHANGE_RATE]
			   ,[LOCAL_AMOUNT]
			   ,[DELIVERY_PLAN_DT]
			   ,[GL_ACCOUNT]
			   ,[CAR_FAMILY_CD]
			   ,[MAT_TYPE_CD]
			   ,[MAT_GRP_CD]
			   ,[QUOTA_FLAG]
			   ,[PR_STATUS]
			   ,[PR_NEXT_STATUS]
			   ,[IS_REJECTED]
			   ,[ASSET_CATEGORY]
			   ,[ASSET_CLASS]
			   ,[ASSET_LOCATION]
			   ,[ASSET_NO]
			   ,[VENDOR_CD]
			   ,[VENDOR_NAME]
			   ,[COMPLETION]
			   ,[OPEN_QTY]
			   ,[USED_QTY]
			   ,[RELEASE_FLAG]
			   ,[LAST_ACTION]
			   ,[CREATED_BY]
			   ,[CREATED_DT]
			   ,[CHANGED_BY]
			   ,[CHANGED_DT])
		SELECT @PROCESS_ID
			   ,@PR_NO
			   ,ITEM_NO
			   ,ITEM_TYPE
			   ,IS_PARENT
			   ,PROCUREMENT_PURPOSE
			   ,MAT_NO
			   ,MAT_DESC
			   ,COST_CENTER_CD
			   ,WBS_NO
			   ,WBS_NAME
			   ,ITEM_CLASS
			   ,ITEM_CLASS_DESC
			   ,VALUATION_CLASS
			   ,VALUATION_CLASS_DESC
			   ,SOURCE_TYPE
			   ,''
			   ,'PR'
			   ,PACKING_TYPE
			   ,PART_COLOR_SFX
			   ,SPECIAL_PROC_TYPE
			   ,NEW_ITEM_QTY
			   ,''
			   ,ITEM_UOM
			   ,ORI_CURR_CD
			   ,NEW_PRICE_PER_UOM
			   ,NEW_AMOUNT
			   ,LOCAL_CURR_CD
			   ,EXCHANGE_RATE
			   ,NEW_LOCAL_AMOUNT
			   ,DELIVERY_PLAN_DT
			   ,GL_ACCOUNT
			   ,CAR_FAMILY_CD
			   ,MAT_TYPE_CD
			   ,MAT_GRP_CD
			   ,QUOTA_FLAG
			   ,''
			   ,''
			   ,'N'
			   ,ASSET_CATEGORY
			   ,ASSET_CLASS
			   ,ASSET_LOCATION
			   ,ASSET_NO
			   ,VENDOR_CD
			   ,VENDOR_NAME
			   ,COMPLETION
			   ,OPEN_QTY
			   ,USED_QTY
			   ,RELEASE_FLAG
			   ,CASE WHEN(NEW_FLAG = 'Y' AND DELETE_FLAG = 'N') THEN 'I'
					 WHEN(NEW_FLAG = 'N' AND UPDATE_FLAG = 'Y' AND DELETE_FLAG = 'N') THEN 'U'
					 WHEN(DELETE_FLAG = 'Y') THEN 'D'
				END AS LAST_ACTION 
			   ,CREATED_BY
			   ,CREATED_DT
			   ,CHANGED_BY
			   ,CHANGED_DT
		FROM TB_T_PR_ITEM WHERE PROCESS_ID = @PROCESS_ID AND ((DELETE_FLAG = 'Y' AND NEW_FLAG = 'N') OR (DELETE_FLAG = 'N' AND (NEW_FLAG = 'Y' OR UPDATE_FLAG = 'Y')))
		
		SET @MESSAGE = 'Insert into TB_H_PR_ITEM Success'
		SET @MSG_ID = 'MSG0000092'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'SUC', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 2, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'SUC', @MODULE, @FUNCTION, 2;
	END TRY
	BEGIN CATCH
		SET @MESSAGE = 'Insert into TB_H_PR_ITEM Failed'
		SET @MSG_ID = 'MSG0000094'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;

		SELECT @MESSAGE = ERROR_MESSAGE()
		SET @MSG_ID = 'EXCEPTION'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;
		
		SET @STATUS = 'FAILED'
	END CATCH
END

IF(@STATUS = 'SUCCESS')
BEGIN
	BEGIN TRY
		SET @MESSAGE = 'Insert into TB_H_PR_SUBITEM Started'
		SET @MSG_ID = 'MSG0000091'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'INF', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 1, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

		INSERT INTO [dbo].[TB_H_PR_SUBITEM]
			   ([PROCESS_ID]
			   ,[PR_NO]
			   ,[PR_ITEM_NO]
			   ,[PR_SUBITEM_NO]
			   ,[MAT_NO]
			   ,[MAT_DESC]
			   ,[COST_CENTER_CD]
			   ,[WBS_NO]
			   ,[GL_ACCOUNT]
			   ,[SUBITEM_QTY]
			   ,[SUBITEM_UOM]
			   ,[PRICE_PER_UOM]
			   ,[ORI_AMOUNT]
			   ,[LOCAL_AMOUNT]
			   ,[LAST_ACTION]
			   ,[CREATED_BY]
			   ,[CREATED_DT]
			   ,[CHANGED_BY]
			   ,[CHANGED_DT])
		SELECT @PROCESS_ID
			   ,@PR_NO
			   ,ITEM_NO
			   ,SUBITEM_NO
			   ,MAT_NO
			   ,MAT_DESC
			   ,COST_CENTER_CD
			   ,WBS_NO
			   ,GL_ACCOUNT
			   ,NEW_SUBITEM_QTY
			   ,SUBITEM_UOM
			   ,NEW_PRICE_PER_UOM
			   ,NEW_AMOUNT
			   ,NEW_LOCAL_AMOUNT
			   ,CASE WHEN(NEW_FLAG = 'Y' AND DELETE_FLAG = 'N') THEN 'I'
					 WHEN(NEW_FLAG = 'N' AND UPDATE_FLAG = 'Y' AND DELETE_FLAG = 'N') THEN 'U'
					 WHEN(DELETE_FLAG = 'Y') THEN 'D'
				END AS LAST_ACTION 
			   ,CREATED_BY
			   ,CREATED_DT
			   ,CHANGED_BY
			   ,CHANGED_DT
		FROM TB_T_PR_SUBITEM WHERE PROCESS_ID = @PROCESS_ID AND ((DELETE_FLAG = 'Y' AND NEW_FLAG = 'N') OR (DELETE_FLAG = 'N' AND (NEW_FLAG = 'Y' OR UPDATE_FLAG = 'Y')))
		
		SET @MESSAGE = 'Insert into TB_H_PR_SUBITEM Success'
		SET @MSG_ID = 'MSG0000092'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'SUC', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 2, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'SUC', @MODULE, @FUNCTION, 2;
	END TRY
	BEGIN CATCH
		SET @MESSAGE = 'Insert into TB_H_PR_SUBITEM Failed'
		SET @MSG_ID = 'MSG0000094'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;

		SELECT @MESSAGE = ERROR_MESSAGE()
		SET @MSG_ID = 'EXCEPTION'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;
		
		SET @STATUS = 'FAILED'
	END CATCH
END

IF(@STATUS = 'SUCCESS')
BEGIN
	BEGIN TRY
		SET @MESSAGE = 'Insert into TB_H_ATTACHMENT Started'
		SET @MSG_ID = 'MSG0000091'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'INF', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 1, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

		INSERT INTO [dbo].[TB_H_ATTACHMENT]
			   ([PROCESS_ID]
			   ,[DOC_NO]
			   ,[SEQ_NO]
			   ,[DOC_SOURCE]
			   ,[DOC_TYPE]
			   ,[FILE_PATH]
			   ,[FILE_NAME_ORI]
			   ,[FILE_EXTENSION]
			   ,[FILE_SIZE]
			   ,[LAST_ACTION]
			   ,[CREATED_BY]
			   ,[CREATED_DT]
			   ,[CHANGED_BY]
			   ,[CHANGED_DT])
		SELECT @PROCESS_ID
			   ,@PR_NO
			   ,SEQ_NO
			   ,''
			   ,DOC_TYPE
			   ,FILE_PATH
			   ,FILE_NAME_ORI
			   ,FILE_EXTENSION
			   ,FILE_SIZE
			   ,CASE WHEN(ISNULL(DELETE_FLAG, 'N') = 'Y') THEN 'D' ELSE 'I' END AS LAST_STATUS
			   ,CREATED_BY
			   ,CREATED_DT
			   ,CHANGED_BY
			   ,CHANGED_DT
		FROM TB_T_ATTACHMENT WHERE PROCESS_ID = @PROCESS_ID AND ((ISNULL(DELETE_FLAG, 'N') = 'Y' AND ISNULL(NEW_FLAG, 'N') = 'N') OR ISNULL(DELETE_FLAG, 'N') = 'N')
		
		SET @MESSAGE = 'Insert into TB_H_ATTACHMENT Success'
		SET @MSG_ID = 'MSG0000092'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'SUC', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 2, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'SUC', @MODULE, @FUNCTION, 2;
		
		SET @MESSAGE = 'Save History for PR No ' + @PR_NO + ' Finished Successfully'
		SET @MSG_ID = 'MSG0000093'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'SUC', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 2, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'SUC', @MODULE, @FUNCTION, 2;

		SET @STATUS = 'SUCCESS'
	END TRY
	BEGIN CATCH
		SET @MESSAGE = 'Insert into TB_H_ATTACHMENT Failed'
		SET @MSG_ID = 'MSG0000094'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;

		SELECT @MESSAGE = ERROR_MESSAGE()
		SET @MSG_ID = 'EXCEPTION'
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MESSAGE, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID
		EXEC dbo.sp_PutLog @MESSAGE, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;
		
		SET @STATUS = 'FAILED'
	END CATCH
END

SELECT PROCESS_ID, PROCESS_TIME, MESSAGE_ID, MESSAGE_TYPE, MESSAGE_DESC, MODULE_ID, MODULE_DESC, FUNCTION_ID, STATUS_ID, [USER_NAME] FROM @TEMP_LOG
END