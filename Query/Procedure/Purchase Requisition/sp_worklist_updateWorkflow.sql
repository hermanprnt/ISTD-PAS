USE [NCP_QA]
GO
/****** Object:  StoredProcedure [dbo].[sp_worklist_updateWorkflow]    Script Date: 12/18/2015 3:55:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		FID)REGGY
-- Create date: 3/26/2015
-- Description:	Update TB_R_WORKFLOW
-- =============================================
ALTER PROCEDURE [dbo].[sp_worklist_updateWorkflow]
	@PR_NO VARCHAR(11),
	@FUNCTION_ID VARCHAR(6),
	@PR_ITEM_NO VARCHAR(5),
	@AMOUNT DECIMAL(18,2),
	@USER_ID VARCHAR(30),
	@STATUS VARCHAR(MAX) OUTPUT
AS
BEGIN
DECLARE @APPROVER_POSITION VARCHAR(2),
		@MAX_AMOUNT VARCHAR(15),
		@DOCUMENT_SEQ INT,
		@MSG VARCHAR(MAX),
		@SEGMENT CHAR(2),
		@APPROVAL_CD CHAR(2),
		@STATUS_CD VARCHAR(2),
        @LEVEL_ID INT

	SET NOCOUNT ON;
	
	
	DECLARE db_update_cursor CURSOR FOR
		SELECT DOCUMENT_SEQ,
			   APPROVER_POSITION,
			   APPROVAL_CD
		FROM TB_R_WORKFLOW 
		WHERE DOCUMENT_NO = @PR_NO 
			 AND ITEM_NO = @PR_ITEM_NO AND DOCUMENT_SEQ > 1
		ORDER BY DOCUMENT_SEQ ASC
	OPEN db_update_cursor
	FETCH NEXT FROM db_update_cursor 
			INTO  
				@DOCUMENT_SEQ,
				@APPROVER_POSITION,
				@APPROVAL_CD
		WHILE @@FETCH_STATUS = 0
		BEGIN	
			BEGIN TRY
				--IF(SUBSTRING(@FUNCTION_ID, 1, 2) = '20')
				--BEGIN
				--	SELECT @MAX_AMOUNT = SYSTEM_VALUE FROM TB_M_SYSTEM WHERE FUNCTION_ID = 'XPRAMT' AND SYSTEM_CD = @APPROVER_POSITION
				--END
				--ELSE
				--BEGIN
				--	SELECT @MAX_AMOUNT = SYSTEM_VALUE FROM TB_M_SYSTEM WHERE FUNCTION_ID = 'XPOAMT' AND SYSTEM_CD = @APPROVER_POSITION
				--END

				IF(SUBSTRING(@FUNCTION_ID, 1, 2) = '20') -- FOR PR, DIVISION CREATOR
				BEGIN
					SELECT @LEVEL_ID = LEVEL_ID FROM TB_M_ORG_POSITION WHERE POSITION_LEVEL = @APPROVER_POSITION
					SELECT @STATUS_CD = SYSTEM_VALUE FROM TB_M_SYSTEM WHERE FUNCTION_ID = @FUNCTION_ID AND SYSTEM_CD = @LEVEL_ID
				END
				ELSE
				BEGIN
					SELECT @STATUS_CD = SYSTEM_VALUE FROM TB_M_SYSTEM WHERE FUNCTION_ID = @FUNCTION_ID AND SYSTEM_CD = @APPROVER_POSITION
				END

				IF(SUBSTRING(@FUNCTION_ID, 1, 2) = '20')
				BEGIN
					SELECT @MAX_AMOUNT = SYSTEM_VALUE FROM TB_M_SYSTEM WHERE FUNCTION_ID = 'XPRAMT' AND SYSTEM_CD IN(SELECT POSITION_LEVEL FROM TB_M_ORG_POSITION WHERE LEVEL_ID = @LEVEL_ID)
					SELECT @MAX_AMOUNT = CASE WHEN(@STATUS_CD = '20') THEN '0' ELSE ISNULL(@MAX_AMOUNT, '0') END
				END
				ELSE
				BEGIN
					SELECT @MAX_AMOUNT = SYSTEM_VALUE FROM TB_M_SYSTEM WHERE FUNCTION_ID = 'XPOAMT' AND SYSTEM_CD = @APPROVER_POSITION
				END

				
				SELECT @SEGMENT = SEGMENTATION_CD FROM TB_M_STATUS WHERE STATUS_CD = @APPROVAL_CD

				UPDATE TB_R_WORKFLOW SET 
					APPROVED_DT = NULL,
					IS_APPROVED = 'N',
					IS_DISPLAY = 
					  CASE WHEN (@SEGMENT = 1) THEN (
						  CASE WHEN(@AMOUNT >= @MAX_AMOUNT)
								THEN 'Y'
							 ELSE 'N' END
						  )
					   ELSE 'Y' END,
					CHANGED_BY = @USER_ID,
					CHANGED_DT = GETDATE()
				WHERE DOCUMENT_NO = @PR_NO AND ITEM_NO = @PR_ITEM_NO AND DOCUMENT_SEQ = @DOCUMENT_SEQ AND IS_APPROVED = 'N'
					
			END TRY
			BEGIN CATCH
				SET @STATUS = 'FAILED'
				SET @MSG = ERROR_MESSAGE()
				BREAK
			END CATCH
			FETCH NEXT FROM db_update_cursor INTO @DOCUMENT_SEQ, @APPROVER_POSITION, @APPROVAL_CD
		END
	CLOSE db_update_cursor
	DEALLOCATE db_update_cursor

	IF(@STATUS = 'FAILED')
		RAISERROR(@MSG, 16, 1)
END