USE [NCP_QA]
GO
/****** Object:  StoredProcedure [dbo].[sp_prcreation_savingProcessing]    Script Date: 12/2/2015 3:33:58 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author     : FID)Intan Puspitasari
-- Created dt : 02/12/2015
-- Description: Saving Master PR Routine
-- =============================================
ALTER PROCEDURE [dbo].[sp_routinemaster_savingProcessing]
	@USER_ID VARCHAR(20),
	@ROUTINE_NO varchar(12),
	@PROCESS_ID bigint,
	@DIVISION_ID int,
	@ROUTINE_DATA ROUTINE_PR_H_TEMP READONLY
AS
BEGIN
DECLARE @EDIT_FLAG CHAR(1),
		@STATUS VARCHAR(20) = 'SUCCESS',
		@MSG VARCHAR(MAX),
		@TEMP_LOG LOG_TEMP,
		@MODULE VARCHAR(10) = '1',
		@FUNCTION VARCHAR(20) = '115001',
		@LOCATION VARCHAR(50) = 'Saving Process',
		@MSG_ID VARCHAR(12)

DECLARE @PR_COORDINATOR VARCHAR(6)

SET NOCOUNT ON;

SET @MSG = 'Saving Process Started'
SET @MSG_ID = 'MSG0000001'
EXEC dbo.sp_PutLog @MSG, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;
		
BEGIN TRANSACTION

SELECT @EDIT_FLAG = CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END FROM TB_M_ROUTINE_PR_H WHERE ROUTINE_NO = @ROUTINE_NO AND PROCESS_ID = @PROCESS_ID

IF(@STATUS = 'SUCCESS')
	INSERT INTO @TEMP_LOG 
	EXEC [dbo].[sp_routineMaster_saveRoutine] 
		@ROUTINE_NO, 
		@PROCESS_ID, 
		@USER_ID, 
		@EDIT_FLAG,
		@ROUTINE_DATA, 
		@STATUS OUTPUT
		
IF(@STATUS = 'SUCCESS')
BEGIN
	BEGIN TRY
		SET @MSG = 'Unlocking TB_M_ROUTINE_PR_H with Routine No ' + @ROUTINE_NO + ' Started'
		SET @MSG_ID = 'MSG0000081'
		EXEC dbo.sp_PutLog @MSG, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'INF', @MSG, @MODULE, @LOCATION, @FUNCTION, 1, @USER_ID

		UPDATE TB_M_ROUTINE_PR_H SET PROCESS_ID = NULL WHERE ROUTINE_NO = @ROUTINE_NO
		SET @STATUS = 'SUCCESS'

		DELETE FROM TB_T_LOCK WHERE PROCESS_ID = @PROCESS_ID AND [USER_ID] = @USER_ID 

		SET @MSG = 'Unlocking TB_M_ROUTINE_PR_H with Routine No ' + @ROUTINE_NO + ' Success'
		SET @MSG_ID = 'MSG0000082'
		EXEC dbo.sp_PutLog @MSG, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'SUC', @MODULE, @FUNCTION, 2;
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'SUC', @MSG, @MODULE, @LOCATION, @FUNCTION, 2, @USER_ID
	END TRY
	BEGIN CATCH
		SET @MSG = 'Unlocking TB_M_ROUTINE_PR_H with Routine No ' + @ROUTINE_NO + ' Failed'
		SET @MSG_ID = 'MSG0000084'
		EXEC dbo.sp_PutLog @MSG, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MSG, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID

		SET @MSG = ERROR_MESSAGE()
		SET @MSG_ID = 'EXCEPTION'
		EXEC dbo.sp_PutLog @MSG, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'ERR', @MODULE, @FUNCTION, 3;
		INSERT INTO @TEMP_LOG SELECT @PROCESS_ID, GETDATE(), @MSG_ID, 'ERR', @MSG, @MODULE, @LOCATION, @FUNCTION, 3, @USER_ID

		SET @STATUS = 'FAILED'
	END CATCH
END

IF(@STATUS = 'SUCCESS')
BEGIN
	COMMIT TRANSACTION

	SET @MSG = 'Saving Process For Routine No. ' + @ROUTINE_NO + ' Success'
	SET @MSG_ID = 'MSG0000080'
	EXEC dbo.sp_PutLog @MSG, @USER_ID, @LOCATION, @PROCESS_ID , @MSG_ID, 'SUC', @MODULE, @FUNCTION, 2;

	SELECT @ROUTINE_NO AS [MESSAGE], @STATUS AS PROCESS_STATUS
END
ELSE
BEGIN
	ROLLBACK TRANSACTION
	EXEC sp_PutLog_Temp @TEMP_LOG

	SELECT CONVERT(VARCHAR, @PROCESS_ID) AS [MESSAGE], @STATUS AS PROCESS_STATUS
END
END

