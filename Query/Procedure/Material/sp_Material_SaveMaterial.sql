CREATE PROCEDURE [dbo].[sp_Material_SaveMaterial] 
		@Kelas char (1),
		@MAT_NO VARCHAR (23),
		@MAT_DESC VARCHAR (50),
		@UOM VARCHAR (4),
		@CAR_FAMILY_CD VARCHAR (4),
		@MAT_TYPE_CD VARCHAR(4),
		@MAT_GRP_CD VARCHAR(9) ,
		@MRP_TYPE VARCHAR (2),
		@RE_ORDER_VALUE DECIMAL,
		@RE_ORDER_METHOD VARCHAR (2),
		@STD_DELIVERY_TIME INT,
		@AVG_DAILY_CONSUMPTION DECIMAL,
		@MIN_STOCK DECIMAL,
		@MAX_STOCK DECIMAL,
		@PCS_PER_KANBAN DECIMAL,
		@MRP_FLAG CHAR (1),
		@VALUATION_CLASS VARCHAR (4),
		@STOCK_FLAG CHAR (1),
		@ASSET_FLAG CHAR (1),
		@QUOTA_FLAG CHAR (1),
		@CONSIGNMENT_CD VARCHAR (1),
		@PROC_USAGE_CD VARCHAR (5),
		@MATL_GROUP VARCHAR(20),
		@DELETION_FLAG CHAR (1),
		@UserId VARCHAR(20)
AS
BEGIN
DECLARE
		@ProcessId BIGINT,
		@Message VARCHAR (MAX),
		@StatusEdit VARCHAR(1),
		@StatusSukses VARCHAR(10)

SET @StatusSukses = 'SUCCESS'

BEGIN TRY
    IF(@Kelas = 'P')
	BEGIN
		-- Cek del flag
		IF EXISTS(SELECT 1 FROM TB_M_MATERIAL_PART WHERE MAT_NO = @MAT_NO)
		BEGIN  
			UPDATE TB_M_MATERIAL_PART SET DELETION_FLAG='N' WHERE MAT_NO=@MAT_NO;
		END
		ELSE
		BEGIN
			INSERT INTO TB_M_MATERIAL_PART(MAT_NO,MAT_DESC,BASE_UOM, ORDER_UOM,CAR_FAMILY_CD,MAT_TYPE_CD,MAT_GRP_CD,MRP_TYPE,RE_ORDER_VALUE,
									   RE_ORDER_METHOD,STD_DELIVERY_TIME,AVG_DAILY_CONSUMPTION,MIN_STOCK,MAX_STOCK,
									   PCS_PER_KANBAN,MRP_FLAG,VALUATION_CLASS,STOCK_FLAG,ASSET_FLAG,QUOTA_FLAG,CONSIGNMENT_CD,
									   PROC_USAGE_GROUP, MATL_GROUP, DELETION_FLAG,CREATED_BY,CREATED_DT,CHANGED_BY,CHANGED_DT)
			VALUES (
			@MAT_NO ,
			ISNULL(@MAT_DESC,''),
			@UOM ,
			@UOM ,
			@CAR_FAMILY_CD,
			@MAT_TYPE_CD ,
			@MAT_GRP_CD  ,
			@MRP_TYPE ,
			@RE_ORDER_VALUE ,
			@RE_ORDER_METHOD ,
			@STD_DELIVERY_TIME ,
			@AVG_DAILY_CONSUMPTION ,
			@MIN_STOCK ,
			@MAX_STOCK ,
			@PCS_PER_KANBAN ,
			@MRP_FLAG ,
			@VALUATION_CLASS,
			@STOCK_FLAG,
			@ASSET_FLAG,
			@QUOTA_FLAG,
			@CONSIGNMENT_CD,
			@PROC_USAGE_CD,
			@MATL_GROUP,
			@DELETION_FLAG,
			@UserId,
			GETDATE(),
			NULL,
			NULL
			)	
			END		
	END
	ELSE
	BEGIN
		IF EXISTS(SELECT 1 FROM TB_M_MATERIAL_NONPART WHERE MAT_NO = @MAT_NO)
		BEGIN  
			UPDATE TB_M_MATERIAL_NONPART SET DELETION_FLAG='N' WHERE MAT_NO=@MAT_NO;
		END
		ELSE
		BEGIN
			INSERT INTO TB_M_MATERIAL_NONPART (MAT_NO,MAT_DESC,BASE_UOM, ORDER_UOM,MRP_TYPE,RE_ORDER_VALUE,
											   RE_ORDER_METHOD,STD_DELIVERY_TIME,AVG_DAILY_CONSUMPTION,MINIMUM_STOCK,MIN_STOCK,MAX_STOCK,PROC_USAGE_GROUP,
											   PCS_PER_KANBAN,MRP_FLAG,VALUATION_CLASS,STOCK_FLAG,ASSET_FLAG,QUOTA_FLAG,CONSIGNMENT_CD,
											   MATL_GROUP, DELETION_FLAG,CREATED_BY,CREATED_DT,CHANGED_BY,CHANGED_DT)
			VALUES (
			@MAT_NO ,
			ISNULL(@MAT_DESC,''),
			@UOM ,
			@UOM ,		
			@MRP_TYPE ,
			@RE_ORDER_VALUE ,
			@RE_ORDER_METHOD ,
			@STD_DELIVERY_TIME ,
			@AVG_DAILY_CONSUMPTION ,
			@MIN_STOCK ,
			@MIN_STOCK ,
			@MAX_STOCK ,
			@PROC_USAGE_CD,
			@PCS_PER_KANBAN ,
			@MRP_FLAG ,
			@VALUATION_CLASS,
			@STOCK_FLAG,
			@ASSET_FLAG,
			@QUOTA_FLAG,
			@CONSIGNMENT_CD,
			@MATL_GROUP,
			@DELETION_FLAG,
			@UserId,
			GETDATE(),
			NULL,
			NULL
			)	
			END
	END
	SET @StatusSukses = 'SUCCESS'
END TRY
BEGIN CATCH	
	--SET @StatusSukses = 'FAILED'
	SELECT 'LINE'+CONVERT(VARCHAR,ERROR_LINE())+ ERROR_MESSAGE();
END CATCH
SELECT @StatusSukses
END