DECLARE @EXIST INT = 0,
		@i INT = 1,
		@MSG_ID VARCHAR(12),
		@MSG VARCHAR(MAX) = '',
		@LOCATION VARCHAR(150) = 'PO Synchronization Job Process',

		@SYSTEM_SOURCE VARCHAR(11),
		@MODULE VARCHAR(10) = '3',
		@FUNCTION VARCHAR(20) = '301002',
		@PROCESS_ID_PER_DOC BIGINT,
		@poNo VARCHAR(11)
	
-- Note: Get count of row on PO Synch Registry
SELECT @EXIST = COUNT(1) FROM TB_R_SYNCH_PO WHERE ISNULL(PROCESS_ID, '') = '' AND EXECUTED_TIME IS NULL AND FINISHED_TIME IS NULL AND PROCESS_STATUS = '0'

-- 1. Looping data PO Synch Registry
WHILE (@EXIST > 0)
BEGIN
	select TOP 1 @poNo = REF_PO_NO, @SYSTEM_SOURCE = SYSTEM_SOURCE from TB_R_SYNCH_PO WHERE ISNULL(PROCESS_ID, '') = '' AND EXECUTED_TIME IS NULL AND FINISHED_TIME IS NULL AND PROCESS_STATUS = '0' ORDER BY REF_PO_NO
	
	-- 2. Generate Process ID for DOC X
	SET @MSG = 'Generate New Process Id For PO No. ' + @poNo
	SET @MSG_ID = 'MSG0000004'
	EXEC dbo.sp_PutLog @MSG, 'SYSTEM', @LOCATION, @PROCESS_ID_PER_DOC OUTPUT, @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

	SET @MSG = 'Generate New Process Id: ' + CONVERT(VARCHAR, @PROCESS_ID_PER_DOC) + ' For PO No. ' + @poNo + ' Success'
	SET @MSG_ID = 'MSG0000005'
	EXEC dbo.sp_PutLog @MSG, 'SYSTEM', @LOCATION, @PROCESS_ID_PER_DOC, @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;
	
	-- 3. Update PO Synch Registry
	SET @MSG = 'Update PO Synch Registry Started'
	SET @MSG_ID = 'MSG0000004'
	EXEC dbo.sp_PutLog @MSG, 'SYSTEM', @LOCATION, @PROCESS_ID_PER_DOC, @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

	UPDATE TB_R_SYNCH_PO SET PROCESS_STATUS = '1', EXECUTED_TIME = GETDATE() WHERE SYSTEM_SOURCE = @SYSTEM_SOURCE AND REF_PO_NO = @poNo
	UPDATE TB_T_INPUT_PO_H SET PROCESS_ID = @PROCESS_ID_PER_DOC WHERE REF_PO_NO = @poNo

	SET @MSG = 'Update PO Synch Registry Finished'
	SET @MSG_ID = 'MSG0000005'
	EXEC dbo.sp_PutLog @MSG, 'SYSTEM', @LOCATION, @PROCESS_ID_PER_DOC, @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

	-- 4. Get PO Condition
	SET @MSG = 'Get PO Condition Started'
	SET @MSG_ID = 'MSG0000006'
	EXEC dbo.sp_PutLog @MSG, 'SYSTEM', @LOCATION, @PROCESS_ID_PER_DOC, @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

	EXEC [dbo].[sp_JobPOCreation_GetCondition] @PROCESS_ID_PER_DOC, @MODULE, @FUNCTION

	SET @MSG = 'Get PO Condition Finished'
	SET @MSG_ID = 'MSG0000007'
	EXEC dbo.sp_PutLog @MSG, 'SYSTEM', @LOCATION, @PROCESS_ID_PER_DOC, @MSG_ID, 'INF', @MODULE, @FUNCTION, 1;

	-- 5. Budget And Save Processing
	EXEC [dbo].[sp_JobPOCreation_Save] @PROCESS_ID_PER_DOC, @MODULE, @FUNCTION
	
	SET @PROCESS_ID_PER_DOC = NULL;
	SELECT @EXIST = COUNT(1) FROM TB_R_SYNCH_PO WHERE ISNULL(PROCESS_ID, '') = '' AND EXECUTED_TIME IS NULL AND FINISHED_TIME IS NULL AND PROCESS_STATUS = '0'
END