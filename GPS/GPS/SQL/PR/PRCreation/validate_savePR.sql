DECLARE @@ERROR_MESSAGE VARCHAR(MAX) = '',
		@@EXIST INT

SET NOCOUNT ON;

IF(ISNULL(@DELIVERY_DATE, '') = '' OR @DELIVERY_DATE = '1900-01-01')
BEGIN
	SELECT @@EXIST = COUNT(*) FROM TB_T_PR_ITEM WHERE PROCESS_ID = @PROCESS_ID AND ISNULL(DELETE_FLAG, 'N') <> 'Y' AND (ISNULL(DELIVERY_PLAN_DT, '') = '' OR DELIVERY_PLAN_DT = '1900-01-01')
	IF(@@EXIST > 0)
	BEGIN
		SET @@ERROR_MESSAGE = @@ERROR_MESSAGE + '<p>Please fill Delivery Plan Date in header <b>or</b> in all of item </p>';
	END
END

SELECT @@EXIST = COUNT(*) FROM TB_T_PR_ITEM WHERE ITEM_CLASS = 'S' AND ISNULL(DELETE_FLAG, 'N') <> 'Y' AND PROCESS_ID = @PROCESS_ID
	   AND ITEM_NO NOT IN (SELECT ITEM_NO FROM TB_T_PR_SUBITEM WHERE PROCESS_ID = @PROCESS_ID AND ISNULL(DELETE_FLAG, 'N') <> 'Y') 
IF(@@EXIST > 0)
BEGIN
	SET @@ERROR_MESSAGE = @@ERROR_MESSAGE + '<p>For item(s) with class <b>service</b> should have at least one sub-item data</p>';
END

SELECT @@EXIST = COUNT(*) FROM TB_T_PR_ITEM WHERE ISNULL(DELETE_FLAG, 'N') <> 'Y' AND PROCESS_ID = @PROCESS_ID
	   AND COMPLETION = 'N'
IF(@@EXIST > 0 AND (@PR_TYPE <> 'RR' AND @URGENT_DOC = 'N'))
BEGIN
	SET @@ERROR_MESSAGE = @@ERROR_MESSAGE + '<p>Please complete item(s) data</p>';
END

DECLARE @@INVALID_MATNO VARCHAR(MAX) = ''
SELECT @@INVALID_MATNO = PRI.MAT_NO + coalesce(',' + @@INVALID_MATNO , '')
FROM TB_T_PR_ITEM PRI
WHERE @PLANT_CD NOT IN (SELECT SL2.PLANT_CD FROM TB_M_SOURCE_LIST SL2 WHERE SL2.MAT_NO = PRI.MAT_NO AND GETDATE() BETWEEN SL2.VALID_DT_FROM AND VALID_DT_TO)
	  AND ISNULL(PRI.MAT_NO, '') <> '' AND PRI.MAT_NO <> 'X' AND PRI.PROCESS_ID = @PROCESS_ID AND ISNULL(PRI.DELETE_FLAG, 'N') = 'N'
IF(ISNULL(@@INVALID_MATNO, '') <> '')
BEGIN
	SET @@INVALID_MATNO = SUBSTRING(@@INVALID_MATNO, 1, LEN(@@INVALID_MATNO) -1)
	SET @@ERROR_MESSAGE = @@ERROR_MESSAGE + '<p>Material No ' + @@INVALID_MATNO + ' doesn''t Match with Plant Code ' + @PLANT_CD + '</p>'
END

IF(@URGENT_DOC = 'N' AND (@PR_TYPE = 'RM' OR @PR_TYPE = 'RT'))
BEGIN
	SELECT @@EXIST = COUNT(1) FROM TB_T_PR_ITEM WHERE ISNULL(DELETE_FLAG, 'N') <> 'Y' AND PROCESS_ID = @PROCESS_ID
			 AND (ISNULL(WBS_NO, '') = '' OR ISNULL(WBS_NO, 'X') = 'X') AND ITEM_CLASS = 'M'
	IF(@@EXIST = 0)
	BEGIN
		SELECT @@EXIST = COUNT(1) FROM TB_T_PR_SUBITEM WHERE ISNULL(DELETE_FLAG, 'N') <> 'Y' AND PROCESS_ID = @PROCESS_ID
			 AND (ISNULL(WBS_NO, '') = '' OR ISNULL(WBS_NO, 'X') = 'X')
	END

	IF(@@EXIST > 0)
	BEGIN
		SET @@ERROR_MESSAGE = @@ERROR_MESSAGE + '<p>WBS No on Item or Sub Item Cannot be Empty If Document is not Urgent</p>';
	END
END

--add by fid.ahmad 04-01-2023 PR Notest Validation For blacklist character based on system master
IF(ISNULL(@PR_NOTES, '') <> '')
BEGIN
	IF OBJECT_ID('tempdb..#BLACK_LIST_TEMP') IS NOT NULL DROP TABLE #BLACK_LIST_TEMP; 
	DECLARE @@ROW INT = 1,@@ROW_COUNT INT = 0,@@IS_BLACKLIST VARCHAR (10) ='FALSE',@@BLACKLIST_CHAR VARCHAR (2)
	SELECT No AS Idx, Split INTO #BLACK_LIST_TEMP FROM dbo.SplitString((SELECT SYSTEM_VALUE FROM TB_M_SYSTEM WHERE FUNCTION_ID='00000' AND SYSTEM_CD='BLACKLIST_CHAR'), '~')  
	SET @@ROW_COUNT= (SELECT COUNT(*) FROM #BLACK_LIST_TEMP)
	WHILE @@ROW <=@@ROW_COUNT
	BEGIN
		SET @@BLACKLIST_CHAR = (SELECT Split FROM #BLACK_LIST_TEMP WHERE Idx = @@ROW)
		IF @PR_NOTES LIKE '%'+@@BLACKLIST_CHAR+'%'
		BEGIN
			SET @@IS_BLACKLIST='TRUE'
			SET @@ROW=@@ROW_COUNT
		END
	SET @@ROW=@@ROW+1
	END

	IF(@@IS_BLACKLIST ='TRUE')
	BEGIN
		SET @@ERROR_MESSAGE = @@ERROR_MESSAGE + '<p>PR Notes can not using character : '+@@BLACKLIST_CHAR+'</p>';
	END
END

SELECT 
	CASE WHEN @@ERROR_MESSAGE <> '' THEN 'EXCEPTION' ELSE 'SUCCESS' END AS PROCESS_STATUS, 
	CASE WHEN @@ERROR_MESSAGE <> '' THEN @@ERROR_MESSAGE ELSE '' END AS [MESSAGE]