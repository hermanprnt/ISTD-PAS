@using GPS.Constants
@using GPS.Controllers.Master
@using GPS.Core.ViewModel
@model GPS.Models.Master.PurchasingGroup

<div class="modal-dialog modal-xl">
    <div class="modal-content">
        <div class="modal-header">
            <p class="modal-title">
                Purchasing Group
            </p>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="row">
                    <div class="col-xs-12 col-sm-4 col-md-4">
                        <div class="form-group form-group-xs">
                            <label for="cmbedit-procchannel" class="col-xs-3 control-label text-muted">Proc. Channel</label>
                            <div class="col-xs-7 col-sm-8">
                                @Html.DropDownList("cmbedit-procchannel", ProcurementChannelController.ProcurementChannelSelectList, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">
                        <div class="form-group form-group-xs">
                            <label for="txtedit-code" class="col-xs-3 control-label text-muted">Purch. Group</label>
                            <div class="col-xs-7 col-sm-8">
                                <input type="text" id="txtedit-code" value="@Model.PurchasingGroupCode" class="form-control"/>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-4 col-md-4">
                        <div class="form-group form-group-xs">
                            <label for="txtedit-description" class="col-xs-3 control-label text-muted">Description</label>
                            <div class="col-xs-7 col-sm-8">
                                <input type="text" id="txtedit-description" value="@Model.Description" class="form-control"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <div class="btn-group-xs text-right">
                <button id="btnedit-save" type="button" class="btn btn-xs btn-primary btn-std">Save</button>
                <button id="btnedit-close" type="button" class="btn btn-xs btn-danger btn-std" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        /* ============================== Init: begin ============================== */

        var DisableAllEditFeatures, EnableAllEditFeatures;

        function Init() {
            $("#cmbedit-procchannel").val("@Model.ProcChannelCode");
            if ($("#pop-purchasinggrp").data("editmode") === "@EditMode.Edit")
                $.Disable(["#cmbedit-procchannel", "#txtedit-code"]);
        }

        var enableAllEditTimer = setInterval(function () {
            DisableAllEditFeatures = ViewData.Get("DisableAllEditFeatures");
            EnableAllEditFeatures = ViewData.Get("EnableAllEditFeatures");
            if (DisableAllEditFeatures !== undefined && EnableAllEditFeatures !== undefined) {
                Init();
                clearInterval(enableAllEditTimer);
            }
        }, 30);

        /* =============================== Init: end =============================== */

        /* ============================== Save: begin ============================== */

        function GetToBeSavedData() {

            return {
                ProcChannelCode: $("#cmbedit-procchannel").valOrDefault(),
                Code: $("#txtedit-code").valOrDefault(),
                Desc: $("#txtedit-description").valOrDefault()
            };
        }

        function ValidateData() {
            var data = GetToBeSavedData();
            var validationMessageBuilder = [];
            if (data.ProcChannelCode === "")
                validationMessageBuilder.push("<p>Procurement Channel Code is mandatory.</p>");
            if (data.Code === "")
                validationMessageBuilder.push("<p>Purchasing Group Code is mandatory.</p>");
            if (data.Desc === "")
                validationMessageBuilder.push("<p>Purchasing Group Description is mandatory.</p>");

            return validationMessageBuilder.join("");
        }

        $("#btnedit-save").click(function (e) {
            $.progressbox.show($tdk.PageTitle, "Save Purchasing Group");
            DisableAllEditFeatures();

            var validationMessage = ValidateData();
            if (validationMessage !== "") {
                EnableAllEditFeatures();
                $.progressbox.hide();

                $.messagebox.show("@ActionResponseViewModel.Error", validationMessage, "@ActionResponseViewModel.Error");
            }
            else {
                var data = GetToBeSavedData();
                $.ajax({
                    type: "POST",
                    url: "@PurchasingGroupController.Action.Save",
                    data: {
                        editMode: $("#pop-purchasinggrp").data("editmode"), // NOTE: #pop-purchasinggrp exist in PurchasingGroup.cshtml
                        procChannelCode: data.ProcChannelCode,
                        code: data.Code,
                        desc: data.Desc
                    },
                    success: function (data) {
                        if (data.ResponseType) {
                            $.messagebox.show(data.ResponseType, data.Message, data.ResponseType, "SINGLE", "(function () { location.href = '/PurchasingGroup'; })()");
                        }
                        else {
                            $.messagebox.show("@ActionResponseViewModel.Error", data, "@ActionResponseViewModel.Error");
                        }
                    },
                    complete: function () {
                        // NOTE: #pop-purchasinggrp exist in PurchasingGroup.cshtml
                        $("#pop-purchasinggrp").modal("hide");
                        EnableAllEditFeatures();
                        $.progressbox.hide();
                    },
                    error: function (data) {
                        $.messagebox.show("@ActionResponseViewModel.Error", data.responseText, "@ActionResponseViewModel.Error");
                    }
                });
            }
        });

        /* =============================== Save: end =============================== */

    });
</script>