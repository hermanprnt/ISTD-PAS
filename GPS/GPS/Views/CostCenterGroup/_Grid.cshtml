@using GPS.Models.Master
@{
    List<CostCenterGroup> ListCostGroup = ViewData["ListCostGroup"] != null ? (List<CostCenterGroup>)ViewData["ListCostGroup"] : new List<CostCenterGroup>();
}

<style type="text/css">
    .close 
    {
        opacity: 1;    
    }
</style>
<div class="row">       
    <div class="col-xs-12 col-sm-6 text-left">
        <div class="form-group form-group-xs" style="margin-bottom: 3px;">           
            <button type="button" onclick="onAddData()" class="btn btn-primary btn-xs btndisable">
                Add</button>
            <button type="button" onclick="onEditData()" class="btn btn-primary btn-xs btndisable">
                Edit</button>
            <button type="button" onclick="onCopyData()" class="btn btn-primary btn-xs btndisable">
                Copy</button>
            <button type="button" onclick="onDeleteData()" class="btn btn-danger btn-xs btndisable">
                Delete</button>
        </div>
    </div>
    <div class="col-xs-12 col-sm-6 text-right">
        <div class="form-group form-group-xs" style="margin-bottom: 3px;"> 
            <a href="javascript:downloadTemplate()" style="margin:10px">Download Template</a> 
            <input type="file" id="upfile" name="upfile" style="display: none" />
            <button type="button" class="fa fa-upload btn btn-warning btn-xs btndisable" style="padding: 6px;" id="btnUpload" onclick="$('input[id=upfile]').click();">
                <span style="font-family: Open Sans; font-size: 12px">Upload</span>
            </button>
            <button id="btnDownload" style="padding: 6px;" class="fa fa-download btn btn-success btn-xs btndisable" onclick="onDownloadData()">
                <span style="font-family: Open Sans; font-size: 12px">Download</span>
            </button>              
       </div>
    </div>
</div>
<div class="row">
    <div class="table-responsive col-xs-12 col-sm-12" style="overflow: hidden;">
        <div style="border: 1pt solid #ccc;">
            <div id="tScrollHead" style="width: 98.5%; overflow: hidden;">
                <table id="dynamic-table" class="table table-striped table-bordered table-condensed table-fixed">
                    <thead>
                        <tr>
                            <th width="20px" class="grid-checkbox-col">
                                <input class="grid-checkbox" type="checkbox" style="height: 12px;" id="checkall" onclick="onCekAll()"/>
                            </th>
                            <th width="30px">No</th>
                            <th width="120px">Cost Center Group</th>
                            <th width="250px">Division</th>
                            <th width="300px">Description</th>                            
                            <th width="103px">Created By</th>
                            <th width="95px">Created Date</th>
                            <th width="103px">Changed By</th>
                            <th width="95px">Changed Date</th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div id="tScrollBody" style="overflow: scroll; height: 355px;">
                <table id="tblScroll" class="table table-striped table-bordered table-condensed table-fixed">
                    <tbody>
                       @{
                            if (ListCostGroup.Count > 0)
                            {
                                foreach (CostCenterGroup item in ListCostGroup)
                                {
                                <tr>
                                    <td class="text-center grid-checkbox-col" width="20px">
                                         <input id="cb-@item.Number" class="grid-checkbox grid-checkbox-body" type="checkbox" data-pc_cd="@item.CostCenterGroupCd;@item.DivisionCd"/>
                                    </td>
                                    <td class="text-center" width="30px">@item.Number</td>
                                    <td class="text-center" width="120px">@item.CostCenterGroupCd</td>
                                    <td class="text-left" width="250px">@item.DivisionName</td>
                                    <td class="text-left" width="300px">@item.CostCenterGroupDesc</td>
                                    <td class="text-left" width="103px">@item.CreatedBy</td>
                                    <td class="text-center" width="95px">@if (item.CreatedDt.ToString("dd.MM.yyyy") != "01.01.0001") { @item.CreatedDt.ToString("dd.MM.yyyy"); }</td>
                                    <td class="text-left" width="103px">@item.ChangedBy</td>
                                    <td class="text-center" width="95px">@if (item.ChangedDt.ToString("dd.MM.yyyy") != "01.01.0001") { @item.ChangedDt.ToString("dd.MM.yyyy"); }</td>
                                </tr>  
                                }
                            }
                            else
                            {
                            <tr>
                                <td colspan="12" class="text-center">
                                    No data retrieved.
                                </td>
                            </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div>
                <table class="table table-striped table-bordered table-condensed table-fixed" style="width: 100%">
                    <tfoot>
                        <tr>
                            <td class="col-xs-8 listdata">
                                @Html.Partial("_Paging")
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $("#tScrollBody").scroll(function () {
        $("#tScrollHead").scrollLeft($("#tScrollBody").scrollLeft());
    });

    var table = document.getElementById("dynamic-table");
    if (table != null) {
        for (var i = 0; i < table.rows.length; i++) {
            for (var j = 0; j < table.rows[i].cells.length; j++) {
                table.rows[i].cells[j].onclick = function () {
                    tableText(this);
                    sorting_execute = '1';
                };
            }
        }
    }

    function tableText(tableCell) {
        var removeClass;
        var addClass;
        var dataSort;

        if (tableCell.getAttribute("class").indexOf('sorting') >= 0) {
            if (tableCell.getAttribute("class").indexOf('sorting_asc') >= 0) {

                removeClass = 'sorting_asc';
                addClass = 'sorting_desc';
                dataSort = 'desc';

            } else if (tableCell.getAttribute("class").indexOf('sorting_desc') >= 0) {

                removeClass = 'sorting_desc';
                addClass = 'sorting_none';
                dataSort = 'none';

            } else {

                removeClass = 'sorting_none';
                addClass = 'sorting_asc';
                dataSort = 'asc';

            }
        }

        //reset all
        var tableReset = document.getElementById("dynamic-table");
        if (tableReset != null) {
            for (var i = 0; i < tableReset.rows.length; i++) {
                for (var j = 0; j < tableReset.rows[i].cells.length; j++) {

                    if (tableReset.rows[i].cells[j].className.indexOf('sorting_asc') >= 0) {
                        tableReset.rows[i].cells[j].classList.remove('sorting_asc');
                        tableReset.rows[i].cells[j].classList.add('sorting');
                        tableReset.rows[i].cells[j].dataset.sort = 'none';
                    }

                    if (tableReset.rows[i].cells[j].className.indexOf('sorting_desc') >= 0) {
                        tableReset.rows[i].cells[j].classList.remove('sorting_desc');
                        tableReset.rows[i].cells[j].classList.add('sorting');
                        tableReset.rows[i].cells[j].dataset.sort = 'none';
                    }

                }
            }
        }
        // end

        if (tableCell.getAttribute("class").indexOf('sorting') >= 0) {
            tableCell.classList.remove(removeClass);
            tableCell.classList.add(addClass);
            tableCell.dataset.sort = dataSort;

            $.ajax({
                type: "GET",
                url: '@Html.Toyota().Page.GetActionUrl("GetPRInquirySort")',
                data: {
                    field: tableCell.dataset.field,
                    sort: dataSort
                },
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    $("#tblScroll")
                            .find('tbody')
                            .html(
                                result
                            );
                }
            });
        }
    }

    $(document).ready(function () {
        $('#upfile').val('');
    });

    $('#upfile').on('change', function (e) {
        var fileName = $('#upfile').val();
        var xls = fileName.match(/\.(xls?)$/i);
        if (xls != null) {
            var files = e.target.files;
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }
                    $.ajax({
                        type: "POST",
                        url: "@Url.Content("~/CostCenterGroup/UploadFile")",
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (data) {
                            var result = data.message.split('|');
                            if (result[0] == 'Error') {
                                $.messagebox.show("Upload Cost Center Group", result[1], "ERR", "SINGLE", "", "");
                            }
                            else if (result[0] == 'War') {
                                onGetData(1);
                                $.messagebox.show("Upload Cost Center Group", result[1], "WRN", "SINGLE", "", "");
                            }
                            else {
                                $('#upfile').val('');
                                onGetData(1);
                                $.messagebox.show("Upload Cost Center Group", "Upload Process Finished Successfully", "INF", "SINGLE", "", "");
                            }
                        },
                        error: function (xhr, status, p3, p4) {
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;
                            console.log(err);
                        }
                    });
                } else {
                    $.messagebox.show("Upload Cost Center Group", "This browser doesn't support HTML5 file uploads!", "WRN", "SINGLE", "", "");
                }
            }
        }
        else {
            $.messagebox.show("Upload Cost Center Group", "Please select an excel file with format xls", "WRN", "SINGLE", "", "");
        }
    });
</script>