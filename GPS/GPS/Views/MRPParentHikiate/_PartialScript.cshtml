@using Toyota.Common.Credential
@{
   User user = Html.Toyota().Page.User;
}
<script type="text/javascript"> 
$(document).ready(function () {   
    onClear();     
        
    $('.date-picker').datepicker({
        autoclose: true,
        todayHighlight: true
    })
    //show datepicker when clicking on the icon
	.next().on(ace.click_event, function () {
		$(this).prev().focus();
	});            
}); 

$.fn.addOption = function (optText, optValue) {
    var option = new Option(optText, optValue);
    return this.append(option);
};

function onGetData(page) { 
    var parentcd = $("#txtParentCd").val();
    if(parentcd == '') parentcd = 'x'; 
     
    var procusage = $("#txtProcUsage").val();
    if(procusage == '') procusage = 'x';
     if ($("#txtProcUsage").val() == '' ){
        $("#txtProcUsage").css("background-color", "#F2BCD5");          
        return;
    }else{  
    $.ajax({
            type: "POST",
            url: "@Html.Toyota().Page.GetActionUrl("SearchData")",
            data: {
                Display: $("#cbodisplay").val() ,
                Page:page,
                USER_NAME :  '@user.Name',
                ParentCd : parentcd,
                ProcUsage : procusage,
                HeaderType : $("#txtHdrType").val(),
			    HeaderCd : $("#txtHdrCD").val(),               
                ValidDt : $("#txtValidDate").val()   ,
                        Model : $("#txtModel").val(),
                        Trans: $("#txtTransmission").val(),
                        Engine :$("#txtEngine").val(),
                        DE : $("#txtDE").val(),
                        ProdSfx : $("#txtProdSfx").val(),
                        Color : $("#txtColor").val()         
            },
            success: function (data) {
                $("#divtable").html(data);                
            }        
        });
        }
}

/*Checkbox all*/   
function onCekAll() { 
    if ($("#checkall").is(":checked")) {
            $(".grid-checkbox-body").prop('checked', true);
        } else {
            $(".grid-checkbox-body").prop('checked', false);
        }
}

function GetSelectedGrid() {
    var ids = [];
    $("input[id^=cb-]").each(function (i, a) {
        if (a.id != null && a.id.length > 0 && a.checked) {
            ids.push($('#' + a.id).data('pc_cd'));
        }
    }
    );
    var h = ids.length;
    var w = ids.join();
    return [h, w];
}

function onClear() {
    $("#txtParentCd").val(''); 
    $("#txtlookupParentCd").val('');
    $("#txtlookupParentCd2").val('');
    $("#txtProcUsage").val('');
    $("#txtHdrType").val('');
	$("#txtHdrCD").val('');   
    $("#txtValidDate").val('');
    $(".btnDownload").attr('disabled',true);
      
    $("input[id^=cb-]").each(function(i,a){
        a.checked = false;          
    }); 
          
    ClearGrid(1);    
}

function ClearGrid(page) { 
    $.ajax({
            type: "POST",
            url: "@Html.Toyota().Page.GetActionUrl("SearchData")",
            data: {
                Display: $("#cbodisplay").val() ,
                Page:page,
                USER_NAME :  '@user.Name',
                ParentCd : '',
                ProcUsage : '',
                HeaderType : '',
			    HeaderCd : '',               
                ValidDt : ''    ,
                        Model : '',
                        Trans: '',
                        Engine :'',
                        DE : '',
                        ProdSfx : '',
                        Color :''      
            },
            success: function (data) {
                $("#divtable").html(data);
            }        
        });
}

function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;   
    if ((charCode >= 48 && charCode <= 57) || charCode == 46 || charCode == 8 || (charCode >= 35 && charCode <= 40)) {
        return true;
    }
    return false;
}
function SearchLookup(page,val) { 
    var search="";
    if(val=="1") {search=$("#txtlookupParentCd").val();} else {search=$("#txtlookupParentCd2").val();}
   $.ajax({
            type: "POST",
            url: "@Html.Toyota().Page.GetActionUrl("SearchLookup")",
            data: {
                Display: 5,
                Page:page,                
                ParentCd : search                      
            },
            datatype: "json",
            traditional: true,
            success: function (data) {        
                var items = $.parseJSON(data);
                var item = [];
                var i = 0;
                var grid = ""
                $("#bodylookup-listemp").empty();
                $("#bodylookup-listemp2").empty();
                $.each(items, function () {
                    grid = grid + "<tr>";
                    grid = grid + "<td onclick=\"javascript:onLookupSelected('" + items[i].PARENT_CD + "','"+val+"')\" class='cursor-link' style=text-align:center>" + items[i].PARENT_CD + "</td>";
                    grid = grid + "<td onclick=\"javascript:onLookupSelected('" + items[i].PARENT_CD + "','"+val+"')\" class='cursor-link' style=text-align:left>" + items[i].PARENT_TYPE + "</td>";                    
                    grid = grid + "</tr>";
                    i++;
                });
                if(val=="1"){
                        $("#bodylookup-listemp").append(grid);
                        $(".paging-index-selected").html(page);
                    }
                    else{
                        $("#bodylookup-listemp2").append(grid);
                        $(".paging-index-selected2").html(page);
                    }
                _getPagingindex(5, page,val);             
            }        
        });
}
function onLookupSelected(value,val) { 
 if(val=="1") { 
        $("#txtParentCd").val(value);  
        $("#txtParentCd").css("background-color", "#FFFFFF");
        $("#gridlookupParentCd").modal('hide');        
 } 
    else{
        $("#txtParentCdPU").val(value);  
        $("#txtParentCdPU").css("background-color", "#FFFFFF");
        $("#gridlookupParentCd2").modal('hide');         
    } 
}
function LookupParentCode2() { 
    $("#txtlookupParentCd").val('');
    $("#txtlookupParentCd2").val('');
    $("#gridlookupParentCd2").modal();       
}
function LookupParentCode() { 
    $("#txtlookupParentCd2").val(''); 
    $("#txtlookupParentCd").val('');    
    $("#gridlookupParentCd").modal();   
}
function LookupClearParentCd() { 
    $("#txtlookupParentCd").val('');
    $("#txtlookupParentCd2").val('');
}
function CloseLookupParentCd() { 
    $("#gridlookupParentCd").modal('hide'); 
    $("#gridlookupParentCd2").modal('hide');  
}


function ParentCdPU() { 
    $("#txtParentCdPU").css("background-color", "#FFFFFF");
}
function ProcUsagePU() { 
    $("#txtProcUsagePU").css("background-color", "#FFFFFF");
}
function HdrCDPU() { 
    $("#txtHdrCDPU").css("background-color", "#FFFFFF");
}
function ValidFrom() { 
    $("#txtValidFrom").css("background-color", "#FFFFFF");
}

function onSaveData() { 
   if ($("#txtParentCdPU").val() == '' && $("#txtProcUsagePU").val() == '' && $("#txtHdrTypePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '') && $("#txtValidFrom").val() == ''){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");       
        $("#txtValidFrom").css("background-color", "#F2BCD5");
        return;
    }
    else if ($("#txtParentCdPU").val() == '' && $("#txtProcUsagePU").val() == '' && $("#txtHdrTypePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '')){
        $("#txtParentCdPU").css("background-color", "#F2BCD5"); 
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");            
        return;
    } 
    else if ($("#txtParentCdPU").val() == '' && $("#txtHdrTypePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '') && $("#txtValidFrom").val() == ''){
        $("#txtParentCdPU").css("background-color", "#F2BCD5"); 
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");
        $("#txtValidFrom").css("background-color", "#F2BCD5");            
        return;
    }  
    else if ($("#txtProcUsagePU").val() == '' && $("#txtHdrTypePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '') &&  $("#txtValidFrom").val() == ''){       
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");        
        $("#txtValidFrom").css("background-color", "#F2BCD5");
        return;
    }    
    else if ($("#txtParentCdPU").val() == '' && $("#txtProcUsagePU").val() == '' && $("#txtHdrTypePU").val() == ''){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");           
        return;
    }
    else if ($("#txtParentCdPU").val() == '' && $("#txtHdrTypePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '')){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");           
        return;
    }
    else if ($("#txtParentCdPU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '') && $("#txtValidFrom").val() == ''){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");
        $("#txtValidFrom").css("background-color", "#F2BCD5");           
        return;
    }
    else if ($("#txtProcUsagePU").val() == '' && $("#txtHdrTypePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '')){
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");           
        return;
    }
    else if ($("#txtProcUsagePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '') && $("#txtValidFrom").val() == ''){
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");
        $("#txtValidFrom").css("background-color", "#F2BCD5");           
        return;
    }
    else if ($("#txtHdrTypePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '') && $("#txtValidFrom").val() == ''){
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");
        $("#txtValidFrom").css("background-color", "#F2BCD5");           
        return;
    } 
       
    else if ($("#txtParentCdPU").val() == '' && $("#txtProcUsagePU").val() == ''){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");                
        return;
    }
    else if ($("#txtParentCdPU").val() == '' && $("#txtHdrTypePU").val() == ''){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");                
        return;
    }
    else if ($("#txtParentCdPU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '')){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");                
        return;
    }
    else if ($("#txtParentCdPU").val() == '' && $("#txtValidFrom").val() == ''){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");
        $("#txtValidFrom").css("background-color", "#F2BCD5");                
        return;
    }
    else if ($("#txtProcUsagePU").val() == '' && $("#txtHdrTypePU").val() == ''){
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");                
        return;
    }
    else if ($("#txtProcUsagePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '')){
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");                
        return;
    }
    else if ($("#txtProcUsagePU").val() == '' && $("#txtValidFrom").val() == ''){
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");
        $("#txtValidFrom").css("background-color", "#F2BCD5");                
        return;
    }
    else if ($("#txtHdrTypePU").val() == '' && ($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '')){
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");                
        return;
    }
    else if ($("#txtHdrTypePU").val() == '' && $("#txtValidFrom").val() == ''){
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");
        $("#txtValidFrom").css("background-color", "#F2BCD5");                
        return;
    }
    else if (($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '') && $("#txtValidFrom").val() == ''){
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");
        $("#txtValidFrom").css("background-color", "#F2BCD5");                
        return;
    } 
      
    else if ($("#txtParentCdPU").val() == ''){
        $("#txtParentCdPU").css("background-color", "#F2BCD5");                      
        return;
    }   
    else if ($("#txtProcUsagePU").val() == ''){
        $("#txtProcUsagePU").css("background-color", "#F2BCD5");                      
        return;
    }
    else if ($("#txtHdrTypePU").val() == ''){
        $("#txtHdrTypePU").css("background-color", "#F2BCD5");                      
        return;
    }
    else if (($("#txtHdrCDPU").val() == null || $("#txtHdrCDPU").val() == '')){
        $("#txtHdrCDPU").css("background-color", "#F2BCD5");                      
        return;
    }    
    else if ($("#txtValidFrom").val() == ''){
        $("#txtValidFrom").css("background-color", "#F2BCD5");                      
        return;
    }   
    

   if($("#txtValidTo").val() <= $("#txtValidFrom").val()) {
        //$("#confirm-save").modal();
        //$("#ConfirmModal").html('Valid From must be earlier than Valid To');
        $.messagebox.show(
            "Error",
            "Valid From must be earlier than Valid To",
            "ERR",
            "SINGLE",
            "",
            ""
        ) 
   }  
   else{
        $.ajax({
            type: "post",
            url: "@Html.Toyota().Page.GetActionUrl("SaveData")",
            data: {
                flag : $("#txtEdit").val(),
                USER_NAME :  '@user.Name', 
                PARENT_CD : $("#txtParentCdPU").val(),
                PROC_USAGE_CD : $("#txtProcUsagePU").val(),
                GENTANI_HEADER_TYPE : $("#txtHdrTypePU").val(),
			    GENTANI_HEADER_CD : $("#txtHdrCDPU").val(),                
                MULTIPLY_USAGE : $("#txtUsageQty").val(),                
                VALID_DT_FR : $("#txtValidFrom").val(),
                VALID_DT_TO : $("#txtValidTo").val()                                
            },                
            success: function (data) { 
                var result = data.message.split('|');
                if(result[0] == 'True') {
                     //$("#info-save").modal();
                     //$("#infoSave").html(data.message);
                     $.messagebox.show(
                        "Info",
                        result[1],
                        "SUC",
                        "SINGLE",
                        "OkInfoSave()",
                        ""
                    )  
                     onGetData(1);
                }              
                else {
                    //$("#confirm-save").modal();
                    //$("#ConfirmModal").html(data.message); 
                    $.messagebox.show(
                        "Error",
                        result[1],
                        "ERR",
                        "SINGLE",
                        "",
                        ""
                    )                    
                }                            
            }
        });  
   }    
}

function OkWarningSave() {
    $("#confirm-save").modal('hide');
}

function OkInfoSave() {
   //$("#info-save").modal('hide');
    $("#basicModal").modal('hide');
}

function onAddData() { 
    $.ajax({
        type: "post",
        url: "@Html.Toyota().Page.GetActionUrl("IsFlagAddEditCopy")",
        data: {
            flag: '0'                                
        },                
        success: function (data) {  
             $("#basicModal").html(data);
             $("#myModalLabel").html('<h4>Parent Header Hakiate (Add)</h4>');    
             $("#basicModal").modal();                            
        }
    });   
}

function onEditData() {      
    if ($(".grid-checkbox-body:checked").length == 0){
        //$("#selected-0-confirm").modal();
        $.messagebox.show(
            "Warning",
            "Please Select at Least One Record to be edit",
            "WRN",
            "SINGLE",
            "",
            ""
        )
    }
    else if ($(".grid-checkbox-body:checked").length > 1){
        //$("#selected-more-confirm").modal();
        $.messagebox.show(
            "Warning",
            "Please Select only One Record to be edit",
            "WRN",
            "SINGLE",
            "",
            ""
        )
    }
    else {
        var value = GetSelectedGrid();
        var key = value[Object.getOwnPropertyNames(value)[1]];       
        var col;

        var PARENTCODE = "";
        var PROCUSAGE = "";
        var HEADERTYPE = "";
        var HEADERCODE = "";        
        var VALIDFOR = "";
              
        col = key.split(';');
        PARENTCODE = col[0];     
        PROCUSAGE = col[1];        
        HEADERTYPE = col[2];       
        HEADERCODE = col[3];      
        VALIDFOR = col[4];         
        MODEL = col[5];           
            
        $.ajax({
            type: "post",
            url: "@Html.Toyota().Page.GetActionUrl("IsFlagAddEditCopy")",
            data: {
                flag: '1'                                 
            },                
            success: function (data) {                    
                    $("#basicModal").html(data);   
                    $("#myModalLabel").html('<h4>Parent Header Hakiate (Edit)</h4>');
                    $("#basicModal").modal(); 
                    
                    $.ajax({
                        type: "post",
                        url: "@Html.Toyota().Page.GetActionUrl("GetSingleData")",
                        data: {
                            ParentCd  : PARENTCODE,
                            ProcUsage : PROCUSAGE,
                            HeaderType : HEADERTYPE,
			                HeaderCd : HEADERCODE,                           
                            ValidDt : VALIDFOR   ,                           
                            Model : MODEL                                
                        },                
                        success: function (data) {                           
                            $('#txtParentCdPU').val(data.PARENT_CD); 
                            $("#txtProcUsagePU").val(data.PROC_USAGE_CD);
                            $("#txtHdrTypePU").val(data.GENTANI_HEADER_TYPE);
	                        $("#txtModelPU").val(data.MODEL); 
                            $('#txtHdrCDPU').addOption(data.GENTANI_HEADER_CD , data.GENTANI_HEADER_CD);                           
                            $("#txtUsageQty").val(data.MULTIPLY_USAGE);	                      
                            $("#txtValidFrom").val(data.VALID_DT_FR);
                            $("#txtValidTo").val(data.VALID_DT_TO);                                                           
                        }
                    });   
                    //                          
            }
        });  
    }        
}

function onCopyData() {      
    if ($(".grid-checkbox-body:checked").length == 0){
        //$("#selected-0-confirm").modal();
        $.messagebox.show(
            "Warning",
            "Please Select at Least One Record to be edit",
            "WRN",
            "SINGLE",
            "",
            ""
        )
    }
    else if ($(".grid-checkbox-body:checked").length > 1){
        //$("#selected-more-confirm").modal();
        $.messagebox.show(
            "Warning",
            "Please Select only One Record to be edit",
            "WRN",
            "SINGLE",
            "",
            ""
        )
    }
    else {
        var value = GetSelectedGrid();
        var key = value[Object.getOwnPropertyNames(value)[1]];       
        var col;

        var PARENTCODE = "";
        var PROCUSAGE = "";
        var HEADERTYPE = "";
        var HEADERCODE = "";       
        var VALIDFOR = "";
              
        col = key.split(';');
        PARENTCODE = col[0];
        PROCUSAGE = col[1];        
        HEADERTYPE = col[2];       
        HEADERCODE = col[3];              
        VALIDFOR = col[4];                
        MODEL = col[5];         
          
        $.ajax({
            type: "post",
            url: "@Html.Toyota().Page.GetActionUrl("IsFlagAddEditCopy")",
            data: {
                flag: '0'                                
            },                
            success: function (data) {                     
                    $("#basicModal").html(data);   
                    $("#myModalLabel").html('<h4>Parent Header Hakiate (Copy)</h4>');
                    $("#basicModal").modal(); 
                    
                    $.ajax({
                        type: "post",
                        url: "@Html.Toyota().Page.GetActionUrl("GetSingleData")",
                        data: {
                            ParentCd : PARENTCODE,
                            ProcUsage : PROCUSAGE,
                            HeaderType : HEADERTYPE,
			                HeaderCd : HEADERCODE,                            
                            ValidDt : VALIDFOR      ,
                            Model : MODEL                          
                        },                
                        success: function (data) { 
                            $('#txtParentCdPU').val(data.PARENT_CD);                             
                            $("#txtProcUsagePU").val(data.PROC_USAGE_CD);
                            $("#txtHdrTypePU").val(data.GENTANI_HEADER_TYPE);
	                        //$("#txtHdrCDPU").val(data.GENTANI_HEADER_CD);                        
                            $("#txtUsageQty").val(data.MULTIPLY_USAGE);	                      
                            $("#txtValidFrom").val(data.VALID_DT_FR);
                            $("#txtValidTo").val(data.VALID_DT_TO);
                            
                            GetListHeaderCode_Copy(data.GENTANI_HEADER_CD);                                                          
                        }
                    });   
                    //                          
            }
        });  
    }        
}

function onDeleteData() {
    if ($(".grid-checkbox-body:checked").length == 0)
       //$("#selected-0-confirm").modal(); 
        $.messagebox.show(
            "Warning",
            "Please Select at Least One Record to be deleted",
            "WRN",
            "SINGLE",
            "",
            ""
        )      
    else 
        //$("#delete-confirm").modal(); 
        $.messagebox.show(
            "Confirmation",
            "Are You Sure You Want to Delete this Item ?",
            "INF",
            "CONFIRM",
            "onYesDelete()",
            ""
        )     
}

function onYesDelete() {
    var value = GetSelectedGrid();
    var key = value[Object.getOwnPropertyNames(value)[1]];
    var koma;
    var field;
    var col;

    var PARENTCODE = "";
    var PROCUSAGE = "";
    var HEADERTYPE = "";
    var HEADERCODE = "";   
    var VALIDFOR = "";
    var MODEL = "";
        
    for(var i = 0; i < $(".grid-checkbox-body:checked").length; i++)
    {
        koma = key.split(',');
        field = koma[i];
        col = field.split(';');
        PARENTCODE += col[0];
        PARENTCODE += ';';
        PROCUSAGE += col[1];
        PROCUSAGE += ';';
        HEADERTYPE += col[2];
        HEADERTYPE += ';';
        HEADERCODE += col[3];
        HEADERCODE += ';';       
        VALIDFOR += col[4];
        VALIDFOR += ';';    
        MODEL += col[5];
        MODEL += ';';
    } 
    PARENTCODE = PARENTCODE.substring(0,PARENTCODE.length - 1);
    PROCUSAGE = PROCUSAGE.substring(0,PROCUSAGE.length - 1);
    HEADERTYPE = HEADERTYPE.substring(0,HEADERTYPE.length - 1);
    HEADERCODE = HEADERCODE.substring(0,HEADERCODE.length - 1);   
    VALIDFOR = VALIDFOR.substring(0,VALIDFOR.length - 1); 
    MODEL = MODEL.substring(0,VALIDFOR.length - 1); 

    $.ajax({
        type: "POST",
        url: "@Html.Toyota().Page.GetActionUrl("DeleteData")",
        data: {  
            Key : key, 
            ParentCd : PARENTCODE,         
            ProcUsage : PROCUSAGE,
            HeaderType : HEADERTYPE,
			HeaderCd : HEADERCODE,           
            ValidDt : VALIDFOR    ,
            Model : MODEL      
        },
        success: function (data) {
            //$("#selected-info").modal();
            //$("#infoModal").html(data); 
             $.messagebox.show(
                "Info",
                data,
                "SUC",
                "SINGLE",
                "",
                ""
            )
            onGetData(1);
        }        
     });
}

function OnDownloadTemplate() {     
      $.ajax({
        type: "POST",
        url: "@Html.Toyota().Page.GetActionUrl("CekTemplate")",        
        success: function (data) {
         if(data == 'False'){
            //$("#selected-info").modal();
            //$("#infoModal").html('Template not found'); 
             $.messagebox.show(
                "Error",
                "Template Not Found",
                "ERR",
                "SINGLE",
                "",
                ""
            )
         }
         else{
             $.fileDownload("MRPParentHikiate/DownloadTemplate/"); 
         }
            
        }        
     });
} 

function onDownloadData() {
    var parentcd = $("#txtParentCd").val();
    if(parentcd == '') parentcd = 'x'; 

    var procusage = $("#txtProcUsage").val();
    if(procusage == '') procusage = 'x';    
    
    $.ajax({
        type: "POST",
        url: '@Url.Content("MRPParentHikiate/ValidateDownloadData/")',
        data: { 
                ParentCd : parentcd,
                ProcUsage : procusage,
                HeaderType : $("#txtHdrType").val(),
			    HeaderCd : $("#txtHdrCD").val(),               
                ValidDt : $("#txtValidDate").val()                           
        },
        success: function (data) {
            if(data == 0) {
                 $("#selected-info").modal();
                 $("#infoModal").html('No data found. Disable for download'); 
            } 
            else{
                 var parentcds = $("#txtParentCd").val();
                 if(parentcds == '') parentcds = 'x'; 

                 var procusages = $("#txtProcUsage").val();
                 if(procusages == '') procusages = 'x'; 

                 var param = '?ParentCd=' +  parentcds;   
                 param += '&ProcUsage=' + procusages;    
                 param += '&HeaderType=' + $("#txtHdrType").val();
                 param += '&HeaderCd=' + $("#txtHdrCD").val();   
                 param += '&ValidDt=' + $("#txtValidDate").val();   

                 var link = '@Url.Content("MRPParentHikiate/DownloadData/")' + param;        
                 window.location = link;   
            }                      
        }        
     }); 
     
}    

function GetListHeaderCode() {
    $("#txtHdrTypePU").css("background-color", "#FFFFFF");
    $("#txtHdrCDPU").css("background-color", "#FFFFFF");
    $.ajax({
        type: "POST",
        url: "@Url.Content("~/MRPParentHikiate/GetListHeaderCode")",
        data: { HeaderType : $("#txtHdrTypePU").val() != "" ? $("#txtHdrTypePU").val() : 0 },
        success: function (resultMessage) {
            $('#txtHdrCDPU').empty();
            if (resultMessage != "") {
                var rows = resultMessage.split('|');
                var cols = "";
                //$('#txtHdrCDPU').addOption("", "");
                for (i = 0; i < rows.length; i++) {
                    if (rows[i] != '') 
                    {
                        cols = rows[i].split(';');
                        $('#txtHdrCDPU').addOption(cols[0] , cols[0]);
                    }
                }                
            }
            else {
                $('#txtHdrCDPU').addOption("", "");
            }                              
        }
    });
}

function GetListHeaderCode_Copy(GENTANI_HEADER_CD) {
    $("#txtHdrTypePU").css("background-color", "#FFFFFF");
    $.ajax({
        type: "POST",
        url: "@Url.Content("~/MRPParentHikiate/GetListHeaderCode")",
        data: { HeaderType : $("#txtHdrTypePU").val() != "" ? $("#txtHdrTypePU").val() : 0 },
        success: function (resultMessage) {
            $('#txtHdrCDPU').empty();
            if (resultMessage != "") {
                var rows = resultMessage.split('|');
                var cols = "";               
                for (i = 0; i < rows.length; i++) {
                    if (rows[i] != '') 
                    {
                        cols = rows[i].split(';');
                        $('#txtHdrCDPU').addOption(cols[0] , cols[0]);
                    }
                }               
                $("#txtHdrCDPU").val(GENTANI_HEADER_CD);
            }
            else {
                $('#txtHdrCDPU').addOption("", "");
            }                              
        }
    });
}

function toggleSearch() {
        $("._criteria").toggle(300, "linear");
        //toogle('moreinquiry', 'Search Criteria');
        if ($("#toogle-search").hasClass("fa-angle-double-up")) {
            $("#toogle-search").removeClass("fa-angle-double-up");
            $("#toogle-search").addClass("fa-angle-double-down");
            $("#toogle-search").removeClass("btn-tiny-down");
            $("#toogle-search").addClass("btn-tiny-down");
            document.getElementById('hrsrc').style.display = 'none';
            $("#tScrollBody").height(355);
            $("#toogle-search").prop('title', 'Show filter');
        }
        else {
            $("#toogle-search").removeClass("fa-angle-double-down");
            $("#toogle-search").addClass("fa-angle-double-up");
            $("#toogle-search").removeClass("btn-tiny-down");
            $("#toogle-search").addClass("btn-tiny-down");
            document.getElementById('hrsrc').style.display = 'block';
            $("#tScrollBody").height(280);
            $("#toogle-search").prop('title', 'Hide filter');
        }
        $("#toogle-search").blur();
    }
//paging popup
        var dataName = 'listEmployee'
        
        function _getPagingindex(_maxRowperPage, page,val) {
        var look="";
        if (val=="1") {look=$("#txtlookupParentCd").val() ;} else {look=$("#txtlookupParentCd2").val();}
        $.ajax({
            type: "POST",
            url: "@Url.Content("~/MRPParentHikiate/LookupPaging")",
            data: {
                pageSize: _maxRowperPage,
                ParentCd: look
            },
            datatype: "json",
            traditional: true,
            success: function (data) {
                var items = JSON.parse(data);
                var i = 0;
                var paging = "";
                var _function = "";
                var _id = "";
                $(".lookupremove").remove();
                _function = "SearchLookup";

                if(val== "1")
                     _id = "#parentcd-paging";
                else
                     _id = "#parentcd-paging2";                    
                
                var pageIndex = page;
                var pageSize = _maxRowperPage;
                var pageCount = items.IndexList.length;
                var countData = items.CountData;

                var pageRange = 1;
                var firstPageRange = (pageRange * 2) + 1;
                var prevPageRange = pageIndex - pageRange;
                var nextPageRange = pageIndex + pageRange;
                var lastPageRange = pageCount - (pageRange * 2);

                var index = 0;
                var firstIndex = 0;
                var lastIndex = 0;

                paging = paging + "<li class='lookupremove'><a  id='lnk-page-" + dataName + "-first' href='#' onclick='javascript:" + _function + "(" +
                         1 + ","+val+")'>First</a></li>";
                paging = paging + "<li class='lookupremove'><a id='lnk-page-" + dataName + "-prev' href='#'onclick='javascript:" + _function + "(" +
                         (pageIndex - 1) + ","+val+")'>Prev</a></li>";

                //// First index logic.
                // Start pagination logic.
                if (prevPageRange <= 1)
                {
                    firstIndex = 1;
                }
                // End pagination logic.
                else if (prevPageRange >= lastPageRange && prevPageRange <= pageCount)
                {
                    firstIndex = lastPageRange;
                }
                // Middle pagination logic.
                else
                {
                    firstIndex = prevPageRange;
                }

                //// Last index logic.
                // Start pagination logic.
                if (nextPageRange <= firstPageRange)
                {
                    lastIndex = firstPageRange;
                }
                // End pagination logic.
                else if (nextPageRange >= pageCount)
                {
                    lastIndex = pageCount;
                }
                // Middle pagination logic.
                else
                {
                    lastIndex = nextPageRange;
                }
                    var col="";

                index = (firstIndex <= 0) ? 1 : firstIndex;
                while (index <= lastIndex && index <= pageCount)
                {
                    col="";
                    if(index==pageIndex)
                    {
                        col="background-color:#2E93FF;color:white;"
                    }
                    
                    paging = paging + "<li class='lookupremove'><a href='#' style='"+col+"'   onclick='javascript:" + _function + "(" +
                             index + ","+val+")'>" + index + "</a></li>";
                    index++;
                }

                paging = paging + "<li class='lookupremove'><a id='lnk-page-" + dataName + "-next' href='#' onclick='javascript:" + _function + "(" +
                         (pageIndex + 1) + ","+val+")'>Next</a></li>";
                paging = paging + "<li class='lookupremove'><a id='lnk-page-" + dataName + "-last' href='#' onclick='javascript:" + _function + "(" +
                         pageCount + ","+val+")'>Last</a></li>";

                // NOTE: converting razor var to js var to avoid js intellisense's "syntax error"
                if (pageIndex === 1)
                {
                    $("#lnk-page-" + dataName + "-first").addClass("pagination-disabled");
                    $("#lnk-page-" + dataName + "-prev").addClass("pagination-disabled");
                }
                if (pageIndex >= pageCount)
                {
                    $("#lnk-page-" + dataName + "-next").addClass("pagination-disabled");
                    $("#lnk-page-" + dataName + "-last").addClass("pagination-disabled");
                }
                if (pageIndex === 1 && pageIndex === pageCount)
                {
                    $("[id^=lnk-page-" + dataName + "]").addClass("pagination-disabled");
                }
                $(_id).append(paging);
                $(".page-no").html($(".paging-index-selected").html());
                $(".page-total").html(items.IndexList.length);
                $(".total-data").html(countData);
                $(".paging-label").show();
            },
            error: function (data) {
            }
        });
    }
</script>