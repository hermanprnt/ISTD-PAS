@using GPS.Constants.PRPOApproval
@using GPS.Controllers.Master
@using GPS.Core.ViewModel
@{
    SelectList userTypeList = new SelectList((Dictionary<string, string>)ViewData["UserType"], "Key", "Value");
}

<div class="form-horizontal row-fluid">
    <div class="row" style="padding-left:5px;">
        <div class="col-xs-12 col-sm-6 col-md-3">
            <div class="form-group form-group-xs">
                <label for="txt-docno" class="col-xs-5 col-sm-4 control-label text-muted">Doc No</label>
                <div class="col-xs-7 col-sm-8">
                    <input type="text" id="txt-docno" name="txt-docno" tabindex="1" class="form-control" />
                </div>
            </div>
            <div class="form-group form-group-xs">
                <label for="cmb-vendorcode" class="col-xs-5 col-sm-4 control-label text-muted">Plant </label>
                <div class="col-xs-7 col-sm-8">
                    @Html.DropDownList("cmb-plant", PlantController.PlantSelectList, new { tabindex="5", onchange = "javascript:populateComboBox('sloc')", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-3">
            <div class="form-group form-group-xs">
                <label for="txt-docno" class="col-xs-5 col-sm-4 control-label text-muted">Description</label>
                <div class="col-xs-7 col-sm-8">
                    <input type="text" id="txt-desc" name="txt-desc" tabindex="2" class="form-control" />
                </div>
            </div>
            <div class="form-group form-group-xs">
                <label for="cmb-purchgrp" class="col-xs-5 col-sm-4 control-label text-muted">Storage</label>
                <div class="col-xs-7 col-sm-8" id="sloc">
                    @Html.Partial(PRPOApprovalPage._CascadeSloc)
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-3">
            <div class="form-group form-group-xs">
                <label for="txt-datefrom" class="col-xs-5 col-sm-4 control-label text-muted">Doc Date*</label>
                <div class="col-xs-7 col-sm-8">
                    <div class="input-group">
						<span class="input-group-addon" style="cursor: pointer;padding:4px 10px;" tabindex="3">
							<i class="fa fa-calendar bigger-110"></i>
						</span>
						<input class="form-control" type="text" name="date-range-picker" id="txt-docdate" data-date-format="dd.mm.yyyy" style="font-size:12px;height:25px;"/>
					</div>
                </div>
            </div>
            <div class="form-group form-group-xs">
                <label for="cmb-division" class="col-xs-5 col-sm-4 control-label text-muted">Division</label>
                <div class="col-xs-7 col-sm-8">
                    @Html.DropDownList("cmb-division", DivisionController.GetDivisionList(), new {@class = "cursor-1", tabindex="7", @style="width:100%;" })
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-3">
            <div class="form-group form-group-xs">
                <label for="cmb-purchgrp" class="col-xs-5 col-sm-4 control-label text-muted">Coordinator</label>
                <div class="col-xs-7 col-sm-8">
                    @Html.DropDownList("cmb-coordinator", PRCheckerController.PRCheckerSelectList, new { tabindex="4", @class = "form-control"})
                </div>
            </div>
            <div class="form-group form-group-xs">
                <label for="cmb-usertype" class="col-xs-5 col-sm-4 control-label text-muted">User Type</label>
                <div class="col-xs-7 col-sm-8">
                    @Html.DropDownList("cmb-usertype", userTypeList, PRPOApprovalPlaceHolder.SelectOption.ToLower(), new { tabindex="8", @class = "form-control"})
                </div>
            </div>
        </div>
    </div>
</div>
<div class="v-space"></div>
<div class="form-horizontal row-fluid">
    <div class="row">
        <div class="col-sm-6">
        </div>
        <div class="col-sm-6 text-right">
            <button id="btn-search" tabindex="10" class="btn btn-primary btn-xs">Search</button>
            <button id="btn-clearsearch" tabindex="11" class="btn btn-default btn-xs">Clear</button>
        </div>
    </div>
    <div class="v-space"></div>
    <div class="line-br"></div>
    <div class="row">
        <div class="col-sm-6">
            <button id="btn-approve" tabindex="12" class="btn btn-primary btn-xs">Approve</button>
            <button id="btn-reject" tabindex="13" class="btn btn-danger btn-xs">Reject</button>
        </div>
        <div class="col-sm-6 text-right">
            <button id="btn-hideshow" tabindex="14" class="btn btn-primary btn-xs">Show Detail</button>
             @if (Html.Toyota().Authorization.IsAuthorizedToAccessFeature("PRApproval", "btn-edit"))
                     {
                       <button id="btn-edit" tabindex="15" class="btn btn-primary btn-xs">Edit</button>
                     }
            
        </div>
    </div>
</div>

<script type="text/javascript">
    $("#btn-approve").click(function (e) {
        // Get selected item.
        var checkedVals = 0;

        checkedVals = $("[id^=chk-approval-]:checkbox:checked", "#table-@PRPOApprovalPage.PRApprovalGrid").map(function () {
            return { docno: $(this).data("docno"), doctype: $(this).data("doctype") };
        }).get();

        if (checkedVals.length > 0) {
            ApprovePRApprovalHeader(function (data) {
                //alert($(this).data("docno"));
                if (!data.ResponseType) {
                    $("#dialog-container").html(data);
                    $("#dialog-container").modal();

                    $("#data-container-@PRPOApprovalPage.PRApproval").removeClass("data-loaded");
                    $("#btn-close-dialog").click(function (data) {
                        if (!$("#data-container-@PRPOApprovalPage.PRApproval").hasClass("data-loaded"))
                            $.progressbox.show("PR Approval", "Refresh Screen. . .");
                    });

                    resetHeaderSelection();

                    SearchPRApproval(undefined, undefined, function (data) {
                        if (!data.ResponseType) {
                            $("#data-container-@PRPOApprovalPage.PRApproval").html(data);
                            $("#data-container-@PRPOApprovalPage.PRApproval").addClass("data-loaded");
                            $.progressbox.hide();
                        }
                        else {
                            $("#data-container-@PRPOApprovalPage.PRApproval").addClass("data-loaded");
                            $.progressbox.hide();
                            $.messagebox.show("@ActionResponseViewModel.Error", data.Message, data.ResponseType);
                        }
                    });
                }
                else
                    $.messagebox.show("@ActionResponseViewModel.Error", data.Message, data.ResponseType);
            });
        }
        else
            $.messagebox.show("@ActionResponseViewModel.Warning", "Please select at least one record to be approved.", "@ActionResponseViewModel.Warning");
    });

    $("#btn-reject").click(function (e) {
        // Get selected item.
        var checkedVals = 0;
        checkedVals = $("[id^=chk-approval-]:checkbox:checked", "#table-@PRPOApprovalPage.PRApprovalGrid").map(function () {
            return { docno: $(this).data("docno"), doctype: $(this).data("doctype") };
        }).get();


        if (checkedVals.length > 0) {
            if ($("#cmb-usertype").val() == "CURRENT_USER") {
                RejectPRApprovalHeader(function (data) {
                    if (!data.ResponseType) {
                        $("#dialog-container").html(data);
                        $("#dialog-container").modal();

                        $("#data-container-@PRPOApprovalPage.PRApproval").removeClass("data-loaded");
                        $("#btn-close-dialog").click(function (data) {
                            if (!$("#data-container-@PRPOApprovalPage.PRApproval").hasClass("data-loaded"))
                                $.progressbox.show("PR Approval", "Refresh Screen. . .");
                        });

                        resetHeaderSelection();

                        SearchPRApproval(undefined, undefined, function (data) {
                            if (!data.ResponseType) {
                                $("#data-container-@PRPOApprovalPage.PRApproval").html(data);
                                $("#data-container-@PRPOApprovalPage.PRApproval").addClass("data-loaded");
                                $.progressbox.hide();
                            }
                            else {
                                $("#data-container-@PRPOApprovalPage.PRApproval").addClass("data-loaded");
                                $.progressbox.hide();
                                $.messagebox.show("@ActionResponseViewModel.Error", data.Message, data.ResponseType);
                            }
                        });
                    }
                    else
                        $.messagebox.show("@ActionResponseViewModel.Error", data.Message, data.ResponseType);
                });
            }
            else
                $.messagebox.show("@ActionResponseViewModel.Warning", "Cannot reject document. Current user is not next approver.", "@ActionResponseViewModel.Warning");
        }
        else
            $.messagebox.show("@ActionResponseViewModel.Warning", "Please select at least one record to be rejected.", "@ActionResponseViewModel.Warning");
    });

    $("#btn-search").click(function(e) {
        $("#header-selection-mode").val("INC");
        $("#docno-count-value").val("0");
        $("#docno-list-value").val("");
        SearchPRApproval(undefined, undefined, function(data) {
            if (!data.ResponseType) {
                $("#data-container-@PRPOApprovalPage.PRApproval").html(data);
                $("#btn-hideshow").html("Show Detail");
            }
            else
                $.messagebox.show("@ActionResponseViewModel.Error", data.Message, data.ResponseType);
        });
    });

    $("#btn-clearsearch").click(function(e) {
        ClearPRApproval(undefined, undefined, function(data) {
            if (!data.ResponseType) {
                ResetView();
                $("#data-container-@PRPOApprovalPage.PRApproval").html(data);
            }
            else
                $.messagebox.show("@ActionResponseViewModel.Error", data.Message, data.ResponseType);
        });
    });

    $("#btn-edit").click(function (e) {
        // Get selected item.
        var checkedVals = 0;
        checkedVals = $("[id^=chk-approval-]:checkbox:checked", "#table-@PRPOApprovalPage.PRApprovalGrid").map(function () {
            return { docno: $(this).data("docno"), doctype: $(this).data("doctype") };
        }).get();
        switch (checkedVals.length) {
            case 1:
                EditPRApproval(checkedVals[0]["docno"], checkedVals[0]["doctype"], null);
                break;
            case 0:
                $.messagebox.show("@ActionResponseViewModel.Warning", "Please select at least one record to be edited.", "@ActionResponseViewModel.Warning");
                break;
            default:
                $.messagebox.show("@ActionResponseViewModel.Warning", "Please select only one record to be edited.", "@ActionResponseViewModel.Warning");
                break;
        }
    });

    $("#btn-hideshow").click(function (e) {
        showDetail();
    });
</script>